
import java.io.FileOutputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.channels.Channels;
import java.nio.channels.ReadableByteChannel;
import java.text.Normalizer.Form;
import java.util.Properties;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * main.java
 *
 * Created on Mar 29, 2012, 2:39:04 PM
 */
/**
 *
 * @author Fanul
 */
public class main extends javax.swing.JFrame {

    /** Creates new form main */
    public static final String BERITA_TERKINI = "http://www.jpnn.com/index.php?mib=rss";
    public static final String NASIONAL = "http://www.jpnn.com/index.php?mib=rss&id=215";
    public static final String NUSANTARA = "http://www.jpnn.com/index.php?mib=rss&id=212";
    public static final String POLITIK = "http://www.jpnn.com/index.php?mib=rss&id=248";
    public static final String EKONOMI = "http://www.jpnn.com/index.php?mib=rss&id=216";
    public static final String OLAHRAGA = "http://www.jpnn.com/index.php?mib=rss&id=213";
    public static final String HIBURAN = "http://www.jpnn.com/index.php?mib=rss&id=214";
    public static final String TEKNOLOGI = "http://www.jpnn.com/index.php?mib=rss&id=247";
    public static final String KRIMINAL = "http://www.jpnn.com/index.php?mib=rss&id=276";
    Myreader reader = new Myreader();
    Stack<Berita> RSSfeeds;
    boolean _proxy;
    AutoUpdater _auto;
    Download _xml;
    Properties _sysProperties;
    private Lzw _prepare;

    public main() {
        System.out.println("System start inisialization");
        initComponents();
        //System.out.println(_statusUpdate.getText());
        _auto = new AutoUpdater(this, Integer.parseInt(boxUpdateTIme.getText()));
        _auto.start();

        _prepare = new Lzw(12);

        _sysProperties = System.getProperties();

        System.out.println("System finish inisialization");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        useproxy = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        text = new javax.swing.JTextArea();
        boxUpdateTIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        _statusUpdate = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Rage Italic", 1, 18));
        jLabel1.setText("PROTO (1) - XML Compressor");

        useproxy.setText("Use Proxy");
        useproxy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useproxyActionPerformed(evt);
            }
        });

        jButton1.setText("Update -now-");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        text.setColumns(20);
        text.setRows(5);
        jScrollPane1.setViewportView(text);

        boxUpdateTIme.setText("3600");

        jLabel2.setText("Update Time in Sec");

        _statusUpdate.setText("Updating - 0 Time");

        jButton2.setText("set update time");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(257, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(_statusUpdate)
                        .addContainerGap(406, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(useproxy)
                        .addContainerGap(415, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boxUpdateTIme, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(202, 202, 202)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(34, 34, 34))))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(useproxy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jButton2))
                    .addComponent(boxUpdateTIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(_statusUpdate)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void useproxyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useproxyActionPerformed
        // TODO add your handling code here:
        if (useproxy.isSelected()) {
            this._proxy = true;
            _sysProperties.put("proxyHost", "10.151.34.14");
            _sysProperties.put("proxyPort", "1111");
            System.setProperties(_sysProperties);
        } else {
            this._proxy = false;
            _sysProperties.remove("proxyHost");
            _sysProperties.remove("proxyPort");
        }
    }//GEN-LAST:event_useproxyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //getNews();
        try {
            getAllRSS();
            compressAllFile();
        } catch (Error e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        _auto.requestStop();
        _auto.setTime(Integer.parseInt(boxUpdateTIme.getText()));
        _auto.start();
    }//GEN-LAST:event_jButton2ActionPerformed

    public void downloadXML() throws MalformedURLException {
        //_xml = new Download(new URL(BERITA_TERKINI));
        //_xml.run();
    }

    public void getNews() {
        try {
            reader.getFeed("", useproxy.isSelected(), NASIONAL);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Form.class.getName()).log(Level.SEVERE, null, ex);
        }


        RSSfeeds = reader.getList();
        //System.out.println("\n"+RSSfeeds.get(0).getImageFromDescription());

        String allx = "";

        for (int i = 0; i < RSSfeeds.size(); i++) {
            RSSfeeds.get(i).setValid();
            if (RSSfeeds.get(i).isValid()) {
                text.append("\n---Judul---\n");
                text.append(RSSfeeds.get(i).getTite());
                text.append("\n------\n");

                text.append("\n---link---\n");
                text.append(RSSfeeds.get(i).getlink());
                text.append("\n------\n");

                text.append("\n---Description---\n");
                text.append(RSSfeeds.get(i).getPureDescription());
                text.append("\n------\n");
                System.out.println(RSSfeeds.get(i).getCity());

//                allx += "\n---Judul---\n";
//                allx += RSSfeeds.get(i).getTite();
//                allx += "\n------\n";
//
//                allx += "\n---Link---\n";
//                allx += RSSfeeds.get(i).getlink();
//                allx += "\n------\n";
//                
//                allx += "\n---ISI---\n";
//                allx += RSSfeeds.get(i).getPureDescription();
//                allx += "\n------\n";
//                
//                text.setText(allx);

            }
        }
    }

    //update manual
    public void getRSS(String inputURL, String outputFile) {
        try {
            URL downloadLink = new URL(inputURL);
            ReadableByteChannel rbc = Channels.newChannel(downloadLink.openStream());
            FileOutputStream fos = new FileOutputStream(outputFile);
            fos.getChannel().transferFrom(rbc, 0, 1 << 24);
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(Download.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void getAllRSS() {
        getRSS(BERITA_TERKINI, "xml/berita_terkini.xml");
        getRSS(EKONOMI, "xml/ekonomi.xml");
        getRSS(HIBURAN, "xml/hiburan.xml");
        getRSS(KRIMINAL, "xml/kriminal.xml");
        getRSS(NUSANTARA, "xml/nusantara.xml");
        getRSS(OLAHRAGA, "xml/olahraga.xml");
        getRSS(POLITIK, "xml/politik.xml");
        getRSS(TEKNOLOGI, "xml/teknologi.xml");
    }

    public void compressAllFile() {
        _prepare.compressFile("xml/berita_terkini.xml", "compress/berita_terkini.compress");
        _prepare.compressFile("xml/ekonomi.xml", "compress/ekonomi.compress");
        _prepare.compressFile("xml/hiburan.xml", "compress/hiburan.compress");
        _prepare.compressFile("xml/kriminal.xml", "compress/kriminal.compress");
        _prepare.compressFile("xml/nusantara.xml", "compress/nusantara.compress");
        _prepare.compressFile("xml/olahraga.xml", "compress/olahraga.compress");
        _prepare.compressFile("xml/politik.xml", "compress/politik.compress");
        _prepare.compressFile("xml/teknologi.xml", "compress/teknologi.compress");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new main().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel _statusUpdate;
    public javax.swing.JTextField boxUpdateTIme;
    public javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea text;
    public javax.swing.JCheckBox useproxy;
    // End of variables declaration//GEN-END:variables
}
